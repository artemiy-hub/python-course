# –ò—Ç–æ–≥–æ–≤—ã–µ —Ç–µ—Å—Ç—ã Python
def test_basic_types():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö"""
    assert type(42) == int
    assert type(3.14) == float
    assert type("hello") == str
    assert type(True) == bool
    print("‚úì –¢–µ—Å—Ç –±–∞–∑–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–π–¥–µ–Ω")

def test_list_operations():
    """–¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–π —Å–æ —Å–ø–∏—Å–∫–∞–º–∏"""
    lst = [1, 2, 3]
    lst.append(4)
    assert lst == [1, 2, 3, 4]
    
    lst.pop()
    assert lst == [1, 2, 3]
    print("‚úì –¢–µ—Å—Ç —Å–ø–∏—Å–∫–æ–≤ –ø—Ä–æ–π–¥–µ–Ω")

def test_dict_operations():
    """–¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–π —Å–æ —Å–ª–æ–≤–∞—Ä—è–º–∏"""
    d = {"a": 1, "b": 2}
    d["c"] = 3
    assert d == {"a": 1, "b": 2, "c": 3}
    
    assert "a" in d
    assert d.get("d", 0) == 0
    print("‚úì –¢–µ—Å—Ç —Å–ª–æ–≤–∞—Ä–µ–π –ø—Ä–æ–π–¥–µ–Ω")

def test_functions():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π"""
    def square(x):
        return x ** 2
    
    assert square(3) == 9
    assert square(0) == 0
    print("‚úì –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–æ–π–¥–µ–Ω")

def test_classes():
    """–¢–µ—Å—Ç –∫–ª–∞—Å—Å–æ–≤"""
    class Person:
        def __init__(self, name):
            self.name = name
        def greet(self):
            return f"Hello, {self.name}"
    
    p = Person("Alice")
    assert p.name == "Alice"
    assert p.greet() == "Hello, Alice"
    print("‚úì –¢–µ—Å—Ç –∫–ª–∞—Å—Å–æ–≤ –ø—Ä–æ–π–¥–µ–Ω")

def test_exceptions():
    """–¢–µ—Å—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–π"""
    try:
        result = 10 / 0
        assert False, "Should have raised ZeroDivisionError"
    except ZeroDivisionError:
        pass
    print("‚úì –¢–µ—Å—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–π –ø—Ä–æ–π–¥–µ–Ω")

def run_all_tests():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("–ó–∞–ø—É—Å–∫ –∏—Ç–æ–≥–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤...")
    
    test_basic_types()
    test_list_operations()
    test_dict_operations()
    test_functions()
    test_classes()
    test_exceptions()
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –∏–∑—É—á–µ–Ω–∏–µ–º Python!")

if __name__ == "__main__":
    run_all_tests() 